on:
  push:
    branches:
    - main
  pull_request:
name: downstream
jobs:
  shared-dependencies:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [17]
    outputs:
      shared-dependencies-version: ${{ steps.install-shared-dependencies.outputs.VERSION }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: ${{matrix.java}}
    - run: java -version
    - run: sudo apt-get install libxml2-utils
    - id: install-shared-dependencies
      run: .kokoro/downstream-shared-dependencies.sh
    - uses: actions/upload-artifact@v2
      with:
        name: package
        path: ~/.m2/repository/com/google/cloud/google-cloud-shared-dependencies
  client-libraries:
    needs: shared-dependencies
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [17]
        repo:
        - eventarc
        - accessapproval
        - accesscontextmanager
        - aiplatform
        - analytics-admin
        - analytics-data
        - api-gateway
        - apigee-connect
        - appengine-admin
        - area120-tables
        - artifact-registry
        - asset
        - assured-workloads
        - automl
        - bigquery
        - bigqueryconnection
        - bigquerydatatransfer
        - bigquerymigration
        - bigqueryreservation
        - bigquerystorage
        - bigtable
        - billing
        - billingbudgets
        - binary-authorization
        - channel
        - cloudbuild
        - compute
        - contact-center-insights
        - container
        - containeranalysis
        - data-fusion
        - datacatalog
        - dataflow
        - datalabeling
        - dataproc
        - dataproc-metastore
        - datastore
        - datastream
        - debugger-client
        - deploy
        - dialogflow
        - dialogflow-cx
        - dlp
        - dms
        - dns
        - document-ai
        - domains
        - errorreporting
        - essential-contacts
        - eventarc
        - filestore
        - firestore
        - functions
        - game-servers
        - gke-connect-gateway
        - gkehub
        - gsuite-addons
        - iam-admin
        - iamcredentials
        - iot
        - kms
        - language
        - life-sciences
        - logging
        - logging-logback
        - managed-identities
        - mediatranslation
        - memcache
        - monitoring
        - monitoring-dashboards
        - network-management
        - network-security
        - networkconnectivity
        - notebooks
        - orchestration-airflow
        - orgpolicy
        - os-config
        - os-login
        - phishingprotection
        - policy-troubleshooter
        - private-catalog
        - profiler
        - pubsub
        - pubsublite
        - recaptchaenterprise
        - recommendations-ai
        - recommender
        - redis
        - resource-settings
        - resourcemanager
        - retail
        - scheduler
        - secretmanager
        - security-private-ca
        - securitycenter
        - securitycenter-settings
        - service-control
        - service-management
        - service-usage
        - servicedirectory
        - shell
        - spanner
        - spanner-jdbc
        - speech
        - storage
        - storage-nio
        - storage-transfer
        - talent
        - tasks
        - texttospeech
        - tpu
        - trace
        - translate
        - video-intelligence
        - video-transcoder
        - vision
        - vpcaccess
        - webrisk
        - websecurityscanner
        - workflow-executions
        - workflows
    steps:
    - uses: actions/checkout@v2
      with:
        repository: googleapis/java-${{matrix.repo}}
        path: java-${{matrix.repo}}
    - uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: ${{matrix.java}}
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v2
    - run: java -version
    - run: sudo apt-get install libxml2-utils
    - run: |
        REPO=${{matrix.repo}}
        SHARED_DEPS_VERSION=${{needs.shared-dependencies.outputs.shared-dependencies-version }}
        PACKAGE_PATH=/home/runner/work/java-core/java-core/package
        FILE_PATH="$PACKAGE_PATH/${SHARED_DEPS_VERSION}/google-cloud-shared-dependencies-${SHARED_DEPS_VERSION}-tests.jar"

        if [ ! -f "$FILE_PATH" ]; then
        echo "$FILE_PATH does not exist."
        exit 1
        fi

        ## cd to the parent directory, i.e. the root of the git repo
        pushd /home/runner/work/java-core/java-core/java-$REPO

        mvn install:install-file -Dfile=${FILE_PATH} -DgroupId=com.google.cloud -DartifactId=google-cloud-shared-dependencies -Dversion=${SHARED_DEPS_VERSION} -Dpackaging=jar

        if [[ $REPO == "bigtable" ]]; then
          pushd google-cloud-bigtable-deps-bom
        fi

        # replace version
        xmllint --shell <(cat pom.xml) << EOF
        setns x=http://maven.apache.org/POM/4.0.0
        cd .//x:artifactId[text()="google-cloud-shared-dependencies"]
        cd ../x:version
        set ${SHARED_DEPS_VERSION}
        save pom.xml
        EOF

        if [[ $REPO == "bigtable" ]]; then
          popd
        fi

        # run dependencies script
        mvn -Denforcer.skip=true clean install